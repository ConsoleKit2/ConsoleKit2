<?xml version="1.0" encoding="UTF-8"?>
<node xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">

  <interface name="org.freedesktop.ConsoleKit.Session">
    <doc:doc>
      <doc:description>
        <doc:para>Session objects represent and store information
        related to a user session.
        </doc:para>
        <doc:para>The properties associated with the Session
        specifically refer to the properties of the "session leader".
        </doc:para>
      </doc:description>
    </doc:doc>
    <method name="GetId">
      <arg name="ssid" direction="out" type="o">
        <doc:doc>
          <doc:summary>Session ID</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the ID for Session.</doc:para>
        </doc:description>
      </doc:doc>
    </method>
    <method name="GetSeatId">
      <arg name="sid" direction="out" type="o">
        <doc:doc>
          <doc:summary>Seat ID</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the ID for the Seat the Session is
        attached to.</doc:para>
        <doc:para>May fail with CK_SESSION_ERROR_FAILED if the session isn't attached to a seat</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="interface" to="Seat">org.freedesktop.ConsoleKit.Seat</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetSessionService">
      <arg name="type" direction="out" type="s">
        <doc:doc>
          <doc:summary>Session service</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns the service of the provided session. Defaults to:</doc:para>
          <doc:para>"unspecified" - Unknown session type, the default.</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:session-service">session-service</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetSessionType">
      <arg name="type" direction="out" type="s">
        <doc:doc>
          <doc:summary>Session type</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns the display type of the provided session. The following type may be returned:</doc:para>
          <doc:para>"x11"         - An X11/Xorg based session</doc:para>
          <doc:para>"wayland"     - A Wayland based session</doc:para>
          <doc:para>"tty"         - A text console based session</doc:para>
          <doc:para>"mir"         - A session using the Mir display server</doc:para>
          <doc:para>"unspecified" - Unknown session type, the default.</doc:para>
          <doc:para>Note: Additional types may be added in the future.</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:session-type">session-type</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetSessionClass">
      <arg name="type" direction="out" type="s">
        <doc:doc>
          <doc:summary>Session class</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns the display type of the provided session. The following classes may be returned:</doc:para>
          <doc:para>"user"        - A normal user session, the default</doc:para>
          <doc:para>"greeter"     - Display Manager pseudo session</doc:para>
          <doc:para>"lock-screen" - Screensaver based session</doc:para>
          <doc:para>"background"  - A long running background process that requires its own session</doc:para>
          <doc:para>Note: Additional classes may be added in the future.</doc:para>
          <doc:para>Since 1.1.2</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:session-class">session-class</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetSessionState">
      <arg name="type" direction="out" type="s">
        <doc:doc>
          <doc:summary>Session state</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns the current state of the session. The following states may be returned:</doc:para>
          <doc:para>"online"    - Session is logged in but not active</doc:para>
          <doc:para>"active"    - Session is logged in and active</doc:para>
          <doc:para>"closing"   - Session is in the process of shutting down</doc:para>
          <doc:para>Note: Additional classes may be added in the future.</doc:para>
          <doc:para>Since 1.1.2</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:session-state">session-state</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetUser">
      <arg name="uid" direction="out" type="u">
        <doc:doc>
          <doc:summary>User ID</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the user that the session belongs to.</doc:para>
        </doc:description>
        <doc:deprecated version="0.1.3" instead="GetUnixUser"/>
        <doc:seealso><doc:ref type="property" to="Session:user">user</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetUnixUser">
      <arg name="uid" direction="out" type="u">
        <doc:doc>
          <doc:summary>POSIX User ID</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the POSIX user ID that the session belongs to.</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:unix-user">unix-user</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetXDGRuntimeDir">
      <arg name="xdg_runtime_dir" direction="out" type="s">
        <doc:doc>
          <doc:summary>XDG_RUNTIME_DIR</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the XDG_RUNTIME_DIR location of the session.
        The XDG_RUNTIME_DIR is the same for all sessions of the same user and will be automatically
        removed once the last session of the user is closed.</doc:para>
        <doc:para>May fail with: CK_SESSION_ERROR_FAILED if it failed to create a runtime dir for the user (such as root).</doc:para>
        <doc:para>Since 1.1.0</doc:para>
        </doc:description>
      </doc:doc>
    </method>
    <method name="GetX11Display">
      <arg name="display" direction="out" type="s">
        <doc:doc>
          <doc:summary>The value of the X11 display</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the value of the X11 DISPLAY for this session
        if one is present.</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:x11-display">x11-display</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetX11DisplayDevice">
       <arg name="x11_display_device" direction="out" type="s">
        <doc:doc>
          <doc:summary>The value of the X11 display device</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the value of the display device (aka TTY) that the
        X11 display for the session is connected to.  If there is no x11-display set then this value
        is undefined.</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:x11-display-device">x11-display-device</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetDisplayDevice">
      <arg name="display_device" direction="out" type="s">
        <doc:doc>
          <doc:summary>The value of the display device</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the value of the display device (aka TTY) that the
        session is connected to.</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:display-device">display-device</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetRemoteHostName">
      <arg name="remote_host_name" direction="out" type="s">
        <doc:doc>
          <doc:summary>The remote host name</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the value of the remote host name for the session.
        </doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:remote-host-name">remote-host-name</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetLoginSessionId">
       <arg name="login_session_id" direction="out" type="s">
        <doc:doc>
          <doc:summary>The value of the native system login session ID</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the value of the login session ID that the
        underlying system uses to enforce session boundaries.  If there is no login session ID
        set then this value is an empty string.</doc:para>
        </doc:description>
      </doc:doc>
    </method>
    <method name="GetVTNr">
       <arg name="VTNr" direction="out" type="u">
        <doc:doc>
          <doc:summary>The virtual terminal the session runs on, if any, 0 otherwise</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns the value of the virtual terminal that the
        underlying session runs on. If the seat doesn't support VTs, then this will always
        return 0.</doc:para>
        <doc:para>Since 1.1.2</doc:para>
        </doc:description>
      </doc:doc>
    </method>
    <method name="IsActive">
      <arg name="active" direction="out" type="b">
        <doc:doc>
          <doc:summary>TRUE if the session is active, otherwise FALSE</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns whether the session is active on the Seat that
        it is attached to.</doc:para>
        <doc:para>If the session is not attached to a seat this value is undefined.
        </doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:active">active</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="IsLocal">
      <arg name="local" direction="out" type="b">
        <doc:doc>
          <doc:summary>TRUE if the session is local, otherwise FALSE</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description><doc:para>Returns whether the session is local</doc:para>
        <doc:para>FIXME: we need to come up with a concrete definition for this value.
        It was originally used as a way to identify XDMCP sessions that originate
        from a remote system.
        </doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:is-local">is-local</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetCreationTime">
      <arg name="iso8601_datetime" type="s" direction="out">
        <doc:doc>
          <doc:summary>An ISO 8601 format date-type string</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns an ISO 8601 date-time string that corresponds to
          the time that the session was opened.
          </doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="Activate">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <doc:doc>
        <doc:description>
          <doc:para>Attempt to activate the this session.  In most
          cases, if successful, this will cause the session to
          become visible and become active on the seat that it
          is attached to.</doc:para>
          <doc:para>May fail with: CK_SESSION_ERROR_ALREADY_ACTIVE, CK_SESSION_ERROR_NOT_SUPPORTED, CK_SESSION_ERROR_GENERAL</doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="method" to="Seat.ActivateSession">Seat.ActivateSession()</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="Lock">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <doc:doc>
        <doc:description>
          <doc:para>This will cause a <doc:ref type="signal" to="Session::Lock">Lock</doc:ref>
          signal to be emitted for this session.
          </doc:para>
        </doc:description>
        <doc:permission>This method is restricted to privileged users by D-Bus policy.</doc:permission>
        <doc:seealso><doc:ref type="signal" to="Session::Lock">Lock signal</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="Unlock">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <doc:doc>
        <doc:description>
          <doc:para>This will cause an <doc:ref type="signal" to="Session::Unlock">Unlock</doc:ref>
          signal to be emitted for this session.
          </doc:para>
          <doc:para>This can be used by login managers to unlock a session before it is
          re-activated during fast-user-switching.
          </doc:para>
        </doc:description>
        <doc:permission>This method is restricted to privileged users by D-Bus policy.</doc:permission>
        <doc:seealso><doc:ref type="signal" to="Session::Unlock">Unlock signal</doc:ref></doc:seealso>
      </doc:doc>
    </method>

    <method name="GetIdleHint">
      <arg name="idle_hint" type="b" direction="out">
        <doc:doc>
          <doc:summary>The value of the idle-hint</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Gets the value of the <doc:ref type="property" to="Session:idle-hint">idle-hint</doc:ref>
          property.
          </doc:para>
        </doc:description>
        <doc:seealso><doc:ref type="property" to="Session:idle-hint">idle-hint</doc:ref></doc:seealso>
      </doc:doc>
    </method>
    <method name="GetIdleSinceHint">
      <arg name="iso8601_datetime" type="s" direction="out">
        <doc:doc>
          <doc:summary>An ISO 8601 format date-type string</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns an ISO 8601 date-time string that corresponds to
          the time of the last change of the idle-hint.
          </doc:para>
        </doc:description>
      </doc:doc>
    </method>
    <method name="SetIdleHint">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="idle_hint" type="b" direction="in">
        <doc:doc>
          <doc:summary>boolean value to set the idle-hint to</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>This may be used by the session to indicate that
          it is idle.
          </doc:para>
          <doc:para>Use of this method is restricted to the user
          that owns the session.</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="SetLockedHint">
      <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
      <arg name="locked_hint" type="b" direction="in">
        <doc:doc>
          <doc:summary>boolean value to set the locked-hint to</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para> This is used by Desktop Environments to update the
          <doc:ref type="property" to="Session:LockedHint">LockedHint</doc:ref>
          property. Calling <doc:ref type="method" to="Session.Lock">Lock()</doc:ref>
          or <doc:ref type="method" to="Session.Unlock">Unlock()</doc:ref> will also
          update the <doc:ref type="property" to="Session:LockedHint">LockedHint</doc:ref>
          value.</doc:para>
          <doc:para>Use of this method is restricted to the user
          that owns the session.</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="CanControlSession">
      <arg name="controller_supported" type="b" direction="out">
        <doc:doc>
          <doc:summary>Whether the system supports a session controller.</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Returns TRUE if the system has Session Controller support. This means
          the TakeControl call won't return CK_SESSION_ERROR_NOT_SUPPORTED.</doc:para>
          <doc:para>Since 1.3.0</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="TakeControl">
      <arg name="force" type="b" direction="in">
        <doc:doc>
          <doc:summary>If set to TRUE, an existing session controller is replaced.</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Allows a single process per session to request ConsoleKit2
          managed devices by calling <doc:ref type="method" to="Session.TakeDevice">TakeDevice</doc:ref>.
          </doc:para>
          <doc:para>Use of this method is restricted to the user
          that owns the session or root. The force argument will be honored for
          root only.</doc:para>
          <doc:para>May fail with: CK_SESSION_ERROR_FAILED, CK_SESSION_ERROR_INSUFFICIENT_PERMISSION, CK_SESSION_ERROR_GENERAL, CK_SESSION_ERROR_NOT_SUPPORTED</doc:para>
          <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="ReleaseControl">
      <doc:doc>
        <doc:description>
          <doc:para>The process that previously successfully called
          <doc:ref type="method" to="Session.TakeControl">TakeControl</doc:ref>
          may use this to reliqunish control. Any devices acquired with
          <doc:ref type="method" to="Session.TakeDevice">TakeDevice</doc:ref>
          will be released. If the session controller closes the dbus-connection,
          this will implicitly call ReleaseControl.
          </doc:para>
          <doc:para>Use of this method is restricted to the process that
          called <doc:ref type="method" to="Session.TakeControl">TakeControl</doc:ref>.</doc:para>
          <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="TakeDevice">
      <annotation name="org.gtk.GDBus.C.UnixFD" value="2"/>
      <arg name="major" type="u" direction="in">
        <doc:doc>
          <doc:summary>Major number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="minor" type="u" direction="in">
        <doc:doc>
          <doc:summary>Minor number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="fd" type="h" direction="out">
        <doc:doc>
            <doc:summary>Returns a file descriptor for the specified device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="inactive" type="b" direction="out">
        <doc:doc>
          <doc:summary>boolean value if the deivce is currently inactive.</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>ConsoleKit2 automatically mutes the file-descriptor if the
          session is inactive and resumes it once the session gets active again.
          This guarantees that a session can only access session-devices if the
          session is active. Note that this revoke/resume mechanism is asynchronous
          and may happen at any given time. This only works on devices that are
          attached to the seat of the given session. A process is not required
          to have direct access to the device-node. Also note that any device
          can only be requested once. As long as you don't release it, further
          calls will fail.
          </doc:para>
          <doc:para>Use of this method is restricted to the session-controller,
          see <doc:ref type="method" to="Session.TakeControl">TakeControl</doc:ref>.</doc:para>
          <doc:para>May fail with: CK_SESSION_ERROR_FAILED, CK_SESSION_ERROR_GENERAL, CK_SESSION_ERROR_NOT_SUPPORTED</doc:para>
          <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="ReleaseDevice">
      <arg name="major" type="u" direction="in">
        <doc:doc>
          <doc:summary>Major number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="minor" type="u" direction="in">
        <doc:doc>
          <doc:summary>Minor number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Release a previously acquired device.
          </doc:para>
          <doc:para>Use of this method is restricted to the session-controller,
          see <doc:ref type="method" to="Session.TakeControl">TakeControl</doc:ref>.</doc:para>
          <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </method>

    <method name="PauseDeviceComplete">
      <arg name="major" type="u" direction="in">
        <doc:doc>
          <doc:summary>Major number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="minor" type="u" direction="in">
        <doc:doc>
          <doc:summary>Minor number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Allows the session controller to synchronously pause a
          device in response to the
          <doc:ref type="signal" to="Session::PauseDevice">PauseDevice</doc:ref>
          signal. Forced signals are automatically completed by ConsoleKit2.
          </doc:para>
          <doc:para>Use of this method is restricted to the session-controller,
          see <doc:ref type="method" to="Session.TakeControl">TakeControl</doc:ref>.</doc:para>
          <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </method>



    <signal name="PauseDevice">
      <arg name="major" type="u">
        <doc:doc>
          <doc:summary>Major number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="minor" type="u">
        <doc:doc>
          <doc:summary>Minor number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="type" type="s">
        <doc:doc>
          <doc:summary>Will either be: force, pause, or gone</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Emitted for any device requested with
          <doc:ref type="method" to="Session.TakeDevice">TakeDevice</doc:ref>.
          A device may remain paused for unknown reasons even though the Session
          is active. A type of 'force' means the device got paused by ConsoleKit2
          already and this is only a notification. A type of 'pause' means
          ConsoleKit2 is requesting to pause the device and grants the session
          controller a limited amount of time to pause it. The session controller
          must respond to this via
          <doc:ref type="method" to="Session.PauseDeviceComplete">PauseDeviceComplete</doc:ref>.
          This synchronous pausing-mechanism is used for backwards-compatibility
          to VTs and ConsoleKit2 is free to not make use of it. ConsoleKit2 may
          also send a force PauseDevice if you don't respond in a timely manner
          (or for any other reason). A type of 'gone' means the device was unplugged from
          the system and you will no longer get any notifications about it.</doc:para>
          <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <signal name="ResumeDevice">
      <annotation name="org.gtk.GDBus.C.UnixFD" value="2"/>
      <arg name="major" type="u">
        <doc:doc>
          <doc:summary>Major number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="minor" type="u">
        <doc:doc>
          <doc:summary>Minor number of the character-device.</doc:summary>
        </doc:doc>
      </arg>
      <arg name="fd" type="h">
        <doc:doc>
          <doc:summary>Will either be: force, pause, or gone</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Emitted for any device requested with
          <doc:ref type="method" to="Session.TakeDevice">TakeDevice</doc:ref>.
           Sent whenever a session is active and a device is resumed.
           It carries the major/minor as arguments and provides a new open
           file-descriptor. You should switch to the new descriptor and close
           the old one. They are not guaranteed to have the same underlying
           file descriptor.</doc:para>
           <doc:para>Since 1.1.1</doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <signal name="ActiveChanged">
      <arg name="is_active" type="b">
        <doc:doc>
          <doc:summary>TRUE if the session is active, otherwise FALSE</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Emitted when the active property has changed.</doc:para>
        </doc:description>
      </doc:doc>
    </signal>
    <signal name="IdleHintChanged">
      <arg name="hint" type="b">
        <doc:doc>
          <doc:summary>the new value of idle-hint</doc:summary>
        </doc:doc>
      </arg>
      <doc:doc>
        <doc:description>
          <doc:para>Emitted when the idle-hint property has changed.</doc:para>
        </doc:description>
      </doc:doc>
    </signal>
    <signal name="Lock">
      <doc:doc>
        <doc:description>
          <doc:para>Emitted in response to a call to the <doc:ref type="method" to="Session.Lock">Lock()</doc:ref> method.</doc:para>
          <doc:para>It is intended that the screensaver for the session should lock the screen in response to this signal.</doc:para>
        </doc:description>
      </doc:doc>
    </signal>
    <signal name="Unlock">
      <doc:doc>
        <doc:description>
          <doc:para>Emitted in response to a call to the <doc:ref type="method" to="Session.Unlock">Unlock()</doc:ref> method.</doc:para>
          <doc:para>It is intended that the screensaver for the session should unlock the screen in response to this signal.</doc:para>
        </doc:description>
      </doc:doc>
    </signal>

    <property name="unix-user" type="u" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The user assigned to the session.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="user" type="u" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The user assigned to the session.</doc:para>
        </doc:description>
        <doc:deprecated version="0.1.3" instead="unix-user"/>
      </doc:doc>
    </property>
    <property name="Seat" type="(so)" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The seat the session is assigned to. It is comprised of the
          seat id and object path of the seat.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="session-service" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The service of the session.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="session-type" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The type of the session.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="session-class" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The class of the session.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="session-state" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The state of the session.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="remote-host-name" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The remote host name for the session.
          </doc:para>
          <doc:para>This will be set in situations where the session is
          opened and controlled from a remote system.
          </doc:para>
          <doc:para>For example, this value will be set when the
          session is created from an SSH or XDMCP connection.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="display-device" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The display device (aka TTY) that the
          session is connected to.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="x11-display" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>Value of the X11 DISPLAY for this session
          if one is present.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="x11-display-device" type="s" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>
          The display device (aka TTY) that the X11 display for the
          session is connected to.  If there is no x11-display set then
          this value is undefined.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="VTNr" type="u" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>The virtual terminal the session runs on, if any, 0 otherwise.</doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="active" type="b" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>
          Whether the session is active on the Seat that
          it is attached to.</doc:para>
          <doc:para>If the session is not attached to a seat this value is undefined.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="is-local" type="b" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>
          Whether the session is local</doc:para>
          <doc:para>FIXME: we need to come up with a concrete definition for this value.
          It was originally used as a way to identify XDMCP sessions that originate
          from a remote system.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="idle-hint" type="b" access="readwrite">
      <doc:doc>
        <doc:description>
          <doc:para>
          This is a hint used to indicate that the session may be idle.
          </doc:para>
          <doc:para>
          For sessions with a <doc:ref type="property" to="Session:x11-display">x11-display</doc:ref> set (ie. graphical
          sessions), it is up to each session to delegate the
          responsibility for updating this value.  Typically, the
          screensaver will set this.
          </doc:para>
          <doc:para>However, for non-graphical sessions with a <doc:ref type="property" to="Session:display-device">display-device</doc:ref> set
          the Session object itself will periodically update this value based
          on the activity detected on the display-device itself.
          </doc:para>
          <doc:para>
          This should not be considered authoritative.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>
    <property name="LockedHint" type="b" access="read">
      <doc:doc>
        <doc:description>
          <doc:para>
          This is a hint used by Desktop Environments to indicate that the
          session may be locked.
          </doc:para>
        </doc:description>
      </doc:doc>
    </property>


  </interface>
</node>
